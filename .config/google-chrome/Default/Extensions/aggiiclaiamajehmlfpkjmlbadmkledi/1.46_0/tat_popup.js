!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=10)}({10:function(t,e){function n(t,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function i(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),t}function a(t){var e="function"==typeof Map?new Map:void 0;return(a=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return o(t,arguments,c(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),u(r,t)})(t)}function o(t,e,n){return(o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var i=new(Function.bind.apply(t,r));return n&&u(i,n.prototype),i}).apply(null,arguments)}function u(t,e){return(u=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}let l=function(t){function e(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),t=n(this,c(e).call(this));const r=document.querySelector("#transover-tat-popup-template").content.cloneNode(!0);t.attachShadow({mode:"open"}).appendChild(r);const i=()=>{window.postMessage({type:"transoverTranslate",text:t.q("#tat_input").value,tl:t.q("#tat_to_lang").value,sl:t.q("#tat_from_lang").value},"*")};return t.q("#swap_languages").onclick=(()=>{if(t.q("#swap_languages").classList.contains("disabled"))return;const e=t.q("#tat_to_lang"),n=t.q("#tat_from_lang"),r=e.value;e.value=n.value,n.value=r}),t.q("#tat_from_lang").onchange=(()=>{"auto"==t.q("#tat_from_lang").value?t.q("#swap_languages").classList.add("disabled"):t.q("#swap_languages").classList.remove("disabled")}),t.q("main").onkeydown=(t=>{13==t.keyCode&&i(),27!=t.keyCode&&t.stopPropagation()}),t.q("#disable_on_this_page").onchange=(t=>{window.postMessage({type:"toggle_disable_on_this_page",disable_on_this_page:t.target.checked},"*")}),t.q("#tat_close").onclick=(t=>{window.postMessage({type:"tat_close"}),t.preventDefault()}),t.q("#tat_submit").onclick=i,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&u(t,e)}(e,a(HTMLElement)),i(e,null,[{key:"observedAttributes",get:function(){return["data-languages","data-disable_on_this_page"]}}]),i(e,[{key:"connectedCallback",value:function(){this.q("#tat_input").focus()}},{key:"attributeChangedCallback",value:function(t,e,n){if("data-languages"==t){const t=this.q("#tat_from_lang"),e=this.q("#tat_to_lang"),r=JSON.parse(n);let i=!0;for(const n in r){const a=new Option(r[n].label,n),o=new Option(r[n].label,n);r[n].selected_sl&&(i=!1,a.setAttribute("selected",!0)),r[n].selected_tl&&o.setAttribute("selected",!0),t.appendChild(a),e.appendChild(o)}const a=document.createElement("optgroup");a.label="----------",t.insertBefore(a,t.firstChild);const o=new Option("Autodetect","auto");t.insertBefore(o,t.firstChild),i&&(o.setAttribute("selected",!0),this.q("#swap_languages").classList.add("disabled"))}else"data-disable_on_this_page"===t&&(this.q("#disable_on_this_page").checked=JSON.parse(n))}},{key:"q",value:function(t){return this.shadowRoot.querySelector(t)}}]),e}();window.customElements.define("transover-type-and-translate-popup",l)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,